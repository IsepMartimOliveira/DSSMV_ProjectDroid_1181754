@startuml
actor User as User
participant "GalleryFragment" as GalleryFragment
participant "GalleryViewModel" as GalleryViewModel
participant "HttpClient" as HttpClient
database "Spoonacular API" as Server
participant "Convert" as Convert
participant "ShoppingCart" as ShoppingCart

User -> GalleryFragment: click add all
GalleryFragment -> GalleryViewModel: sendIngredientToBasket( ingredientName,totalIngredients,username,hash)
GalleryViewModel->ShoppingCart:ShoppingCart(ingredient)
ShoppingCart-->GalleryViewModel: shoppingCart
GalleryViewModel->Convert:Convert.convertToJson(shoppingCart)
Convert-->GalleryViewModel:ingredientJson

activate HttpClient

GalleryViewModel -> HttpClient: postRequest(shoppingUrl, ingredientJson, callback)
activate Server

HttpClient->Server:POST request
Server-->"HttpClient":response

deactivate Server
HttpClient --> GalleryViewModel: response success
deactivate HttpClient
GalleryViewModel -> GalleryViewModel: update successfulAdditions counter
GalleryViewModel -> GalleryViewModel: check if all ingredients added successfully
GalleryViewModel -> GalleryViewModel: postValue(success)
deactivate GalleryViewModel
GalleryViewModel -> GalleryFragment: observe getSuccessfulAdditionLiveData()
activate GalleryFragment
GalleryFragment -> User: Display success or failure message
deactivate GalleryFragment

@enduml
