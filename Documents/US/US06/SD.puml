@startuml
title As a User I want to display the added items

actor User as User

participant "ShoppingListFragment" as SlideshowFragment
participant "ShoppingListViewModel" as SlideshowViewModel
participant "HttpClient" as HttpClient
database "Spoonacular API" as Server
participant "Convert" as Convert
participant "DTOMapper" as DTOMapper
participant "ShoppingAdapter" as ShoppingAdapter
Note left of SlideshowFragment: SharedPreferences\n(username, hash)
User->SlideshowFragment: onCreate
SlideshowFragment -> SlideshowViewModel: observe LiveData
SlideshowFragment -> SlideshowViewModel: fetchShoppingCart(username, hash)
activate SlideshowViewModel
SlideshowViewModel -> SlideshowViewModel: construct URL
SlideshowViewModel -> HttpClient: getRequest(url, callback)
activate HttpClient
HttpClient -> Server: GET request
activate Server
Server --> HttpClient:  response
deactivate Server
HttpClient --> SlideshowViewModel: receive response
deactivate HttpClient
SlideshowViewModel -> Convert: convertFromJson(jsonResponse, CartItemResponseDTO.class)
activate Convert
Convert --> SlideshowViewModel: cartItemResponseDTO
deactivate Convert

SlideshowViewModel -> SlideshowViewModel: process cartItemResponseDTO\nand check aisles
alt cartItemResponseDTO.getAisles() not empty then
  SlideshowViewModel -> SlideshowViewModel: extract ShoppingInfoDTO from aisles
  SlideshowViewModel->SlideshowViewModel: create a List<ShoppingInfoDTO> shoppingInfoDTOs
  SlideshowViewModel -> DTOMapper:  DTOMapper(ShoppingInfoDTO -> CartItem)shoppingInfoToCartItemDTOMapper
  activate DTOMapper
  DTOMapper -> DTOMapper: shoppingInfoToCartItemDTOMapper.mapList(shoppingInfoDTOs)
  DTOMapper -> SlideshowViewModel: cartItems
  deactivate DTOMapper
SlideshowViewModel->SlideshowViewModel:cartItemsLiveData.postValue(cartItems)
end if
deactivate SlideshowViewModel

SlideshowViewModel -> SlideshowFragment: getCartItemsLiveData().observe()
activate SlideshowFragment
SlideshowFragment -> ShoppingAdapter: updateData(cartItems)
activate ShoppingAdapter
ShoppingAdapter -> SlideshowFragment: updated data
deactivate ShoppingAdapter
SlideshowFragment -> SlideshowFragment: calculateTotalCost(cartItems)
SlideshowFragment -> SlideshowFragment: updateTotalCostView(totalCost)
SlideshowFragment --> User: Update UI with Data and display it
deactivate SlideShowFragment

@enduml
